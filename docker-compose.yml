# Docker Compose para Traefik 3.5 con buenas prácticas y monitoreo
# Author: Bismarck Villca <bismarck.villca@gmail.com>
name: traefik

services:
  traefik:
    image: traefik:3.5
    container_name: traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      # --- Configuración de Logs ---
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.bufferingsize=100"
      # --- Configuración de Métricas Prometheus expuestas en /prometheus/metrics sobre el entrypoint web ---
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
      - "--metrics.prometheus.addRoutersLabels=true"
      - "--metrics.prometheus.entryPoint=web" # Expone métricas en el entrypoint web (puerto 80)
      - "--metrics.prometheus.manualRouting=true" # Permite definir la ruta personalizada para métricas
      # --- Router para exponer métricas en /prometheus/metrics ---
      - "--http.routers.prometheus.rule=Path(`/prometheus/metrics`)"
      - "--http.routers.prometheus.entrypoints=web"
      - "--http.routers.prometheus.service=prometheus@internal"
      # --- Configuración de Proxy Reverso ---
      # - --entrypoints.web.forwardedHeaders.trustedIPs=199.3.0.108/32
      # - --entrypoints.web.proxyProtocol.trustedIPs=199.3.0.108/32
    ports:
      - "${HTTP_PORT:-80}:80"           # HTTP
      - "${HTTPS_PORT:-443}:443"        # HTTPS
      - "${DASHBOARD_PORT:-8080}:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${DIR_LOGS:-./logs}/traefik:/var/log/traefik
    environment:
      - TZ=${TZ:-UTC}
    networks:
      - traefik
    labels:
      # Habilita Traefik para este contenedor y expone el dashboard en traefik.localhost
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.api.service=api@internal"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"

networks:
  traefik:
    driver: bridge
